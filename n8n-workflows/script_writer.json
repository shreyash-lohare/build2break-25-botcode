{
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4a293a57-3227-4c5f-b1a1-4b530c180699",
              "name": "input_data",
              "value": "{   \"topic\": \"The Role of Dopamine in Motivation\",   \"key_points\": [     {       \"point\": \"Dopamine is a neurotransmitter often called the 'motivation molecule' because it is released in anticipation of a reward.\",       \"source\": \"Page 2, Paragraph 1\"     },     {       \"point\": \"Studies show that higher dopamine levels increase the willingness to exert effort for a reward.\",       \"source\": \"Page 4, Paragraph 3\"     },     {       \"point\": \"It's not about the pleasure of the reward itself, but the motivational drive to seek it out.\",       \"source\": \"Page 5, Paragraph 2\"     }   ] }",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -144,
        48
      ],
      "id": "5facffab-c849-49cb-a09f-d9535fad6555",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.3,
      "position": [
        -208,
        -144
      ],
      "id": "f2b812b0-e60e-49b9-b3c5-2929a741ec0f",
      "name": "On form submission",
      "webhookId": "d9a3b3a7-a5b3-459e-9551-c8997739c8fd"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "messages": {
          "values": [
            {
              "content": "=# ROLE & GOAL\nYou are a creative and concise YouTube Shorts scriptwriter. Your mission is to transform a set of key points from a PDF into a compelling, visually-driven video script that is under 60 seconds long. The final video will use doodle and freehand whiteboard-style animations, so your visual ideas must be simple and clear.\n\n# CONSTRAINTS\n1.  Total Narration: The total word count for the narration across all scenes MUST be under 150 words.\n2.  Visual Style: The visual ideas MUST be describable as simple doodles, sketches, or whiteboard drawings. Do not suggest complex animations or realistic images.\n3.  Minimize On-Screen Text: The script should rely on visuals and narration, not text overlays.\n4.  Output Format: You MUST respond with a single, clean JSON object and nothing else. Do not include any introductory text, apologies, or explanations outside of the JSON structure.\n\n# TASK\nGiven the following key points from a document, perform these steps:\n1.  Create a short, catchy `title` for the video.\n2.  Structure the script into an array of 3 to 5 `scenes`.\n3.  For each scene:\n    a. Write a `narration` line. It must be conversational and easy to understand.\n    b. Create a `visual_idea`. Describe a simple doodle or sketch that visually represents the narration. Be descriptive (e.g., \"A hand draws a lightbulb that turns on,\" \"An animated bar chart quickly grows\").\n    c. Include the `source_citation` from the input that corresponds to the information in the scene. If a scene is introductory or transitional, the citation can be null.\n4.  Calculate the `total_word_count` of all narration combined.\n5.  Return this entire structure as a single, valid JSON object.\n\n# INPUT DATA\n{{ JSON.stringify($('Edit Fields').item.json.input_data) }}"
            }
          ]
        },
        "simplify": false,
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        64,
        48
      ],
      "id": "660c46d2-233d-494b-b868-f85d63264992",
      "name": "Message a model",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "googlePalmApi": {
          "id": "6CSvubRfgRyhUNwP",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get the complex output from the Gemini node\nconst geminiResponse = $json;\n\n// Extract the text content which contains our JSON script\nconst scriptText = geminiResponse.candidates[0].content.parts[0].text;\n\n// Convert the text string into a real JSON object\nconst finalScript = JSON.parse(scriptText);\n\n// Return the clean JSON object as the final output of this node\nreturn finalScript;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        416,
        48
      ],
      "id": "e15fa1b2-4bda-4775-a41a-9917538d0f7b",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        624,
        48
      ],
      "id": "1f0eb6d7-356a-434f-a8f3-f46213befa38",
      "name": "Loop Over Items"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me",
      "typeVersion": 1,
      "position": [
        1040,
        48
      ],
      "id": "912f2edc-eaa5-43fd-8cb7-c1c720801e27"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://texttospeech.googleapis.com/v1/text:synthesize?key=AIzaSyDP9TF6M8TllvpECN6jYlqNeuM2GsMwiRY",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"input\": {\n    \"text\": \"{{ $json.narration }}\"\n  },\n  \"voice\": {\n    \"languageCode\": \"en-US\",\n    \"name\": \"en-US-Studio-O\"\n  },\n  \"audioConfig\": {\n    \"audioEncoding\": \"MP3\"\n  }\n}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        832,
        80
      ],
      "id": "04287348-0ff4-4643-83d0-3c2d9abf12cd",
      "name": "HTTP Request",
      "retryOnFail": true,
      "waitBetweenTries": 5000
    }
  ],
  "connections": {
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "a06370c1558bdfcb1f62c6257da0d3623c935a386284d4ca6422330528756397"
  }
}